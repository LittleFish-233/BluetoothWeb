@inject IJSRuntime JS
@inject ILocalDataService _localDataService
<MApp>

    @if (_localDataService.IsApp)
    {
        <Router AppAssembly="@typeof(App).Assembly">
            <Found Context="routeData">
                <RouteView RouteData="@routeData" DefaultLayout="@typeof(AppLayout)" />
                <FocusOnNavigate RouteData="@routeData" Selector="h1" />
            </Found>
            <NotFound>
                <PageTitle>Not found</PageTitle>
                <LayoutView Layout="@typeof(AppLayout)">
                    <p role="alert">Sorry, there's nothing at this address.</p>
                </LayoutView>
            </NotFound>
        </Router>

    }
    else
    {
        <Router AppAssembly="@typeof(App).Assembly">
            <Found Context="routeData">
                <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
                <FocusOnNavigate RouteData="@routeData" Selector="h1" />
            </Found>
            <NotFound>
                <PageTitle>Not found</PageTitle>
                <LayoutView Layout="@typeof(MainLayout)">
                    <p role="alert">Sorry, there's nothing at this address.</p>
                </LayoutView>
            </NotFound>
        </Router>

    }

</MApp>
    

        @code{
            protected override async Task OnAfterRenderAsync(bool firstRender)
            {
                await base.OnAfterRenderAsync(firstRender);


                if (firstRender)
                {
                    var isApp = await IsMobile();
                    if (isApp != _localDataService.IsApp)
                    {
                        _localDataService.IsApp = isApp;
                        StateHasChanged();
                    }
                }
            }


            public async Task<bool> IsMobile()
            {
                try
                {
                    var re = await JS.InvokeAsync<string>("isMobile");
                    if (re == "true")
                    {
                        return true;
                    }
                    else
                    {
                        return false;
                    }
                }
                catch
                {
                    return false;
                }

            }
        }
